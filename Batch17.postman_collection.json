{
	"info": {
		"_postman_id": "571cbce5-2b72-4c8f-bc5e-ec47a7653287",
		"name": "Batch17",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26879137"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code  = pm.response.code\r",
							"console.log(code)\r",
							"switch (code){\r",
							"\r",
							"case 200:\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\", jsonData.bookingid)\r",
							"break;\r",
							"}\r",
							"\r",
							"pm.test(\"Response status code is 400\", function () {\r",
							"  pm.expect(pm.response.code).to.equal(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response has a valid schema\", function () {\r",
							"    pm.expect(pm.response).to.have.status(400);\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");\r",
							"    pm.expect(pm.response.text()).to.include(\"Bad Request\");\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response body is in text/plain format\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"const moment = require('moment')\r",
							"const today = moment()\r",
							"pm.environment.set(\"checkin\",today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkout\",today.add(5,'day').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(totalprice)\r",
							"pm.environment.set(\"price\",parseInt(totalprice))\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastName}}\",\r\n\t\"totalprice\": {{price}},\r\n\t\"depositpaid\": true,\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkin}}\",\r\n    \t\"checkout\": \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\": \"Breakfast\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Hero}}/booking",
					"host": [
						"{{Hero}}"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code  = pm.response.code\r",
							"console.log(code)\r",
							"switch (code){\r",
							"\r",
							"case 200:\r",
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation \", function(){\r",
							"pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"}) \r",
							"pm.test(\"Check In\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"})\r",
							"pm.test(\"Total price\", function(){\r",
							"    pm.expect(jsonData.totalprice).to.eql(pm.environment.get(\"price\"))\r",
							"})\r",
							"pm.test(\"Last Name Validation \", function(){\r",
							"pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"}) \r",
							"pm.test(\"Deposit paid Validation\", function(){\r",
							"    pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"})\r",
							"pm.test(\"Check out \", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"})\r",
							"pm.test(\"Additional needs Validation \", function(){\r",
							"pm.expect(jsonData.additionalneeds).to.eql(\"Breakfast\")\r",
							"}) \r",
							"\r",
							"break;\r",
							"\r",
							"case 404:\r",
							"pm.test('Not found')\r",
							"break;\r",
							"case 500:\r",
							"pm.test('Not found')\r",
							"break;\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var tokenData = pm.response.json()\r",
							"pm.environment.set(\"token\",tokenData.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					},
					{
						"key": "",
						"value": "",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"Hasibur\",\r\n\t\"lastname\": \"Rahman\",\r\n\t\"totalprice\": 111,\r\n\t\"depositpaid\": true,\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"2013-02-23\",\r\n    \t\"checkout\": \"2014-10-23\"\r\n\t},\r\n\t\"additionalneeds\": \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.test(\"First Name Validation \", function(){\r",
							"pm.expect(jsonData.firstname).to.eql(\"Hasibur\")\r",
							"}) \r",
							"pm.test(\"Check In\", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkin).to.eql(\"2013-02-23\")\r",
							"})\r",
							"pm.test(\"Total price\", function(){\r",
							"    pm.expect(jsonData.totalprice).to.eql(111)\r",
							"})\r",
							"pm.test(\"Last Name Validation \", function(){\r",
							"pm.expect(jsonData.lastname).to.eql(\"Rahman\")\r",
							"}) \r",
							"pm.test(\"Deposit paid Validation\", function(){\r",
							"    pm.expect(jsonData.depositpaid).to.eql(true)\r",
							"})\r",
							"pm.test(\"Check out \", function(){\r",
							"    pm.expect(jsonData.bookingdates.checkout).to.eql(\"2014-10-23\")\r",
							"})\r",
							"pm.test(\"Additional needs Validation \", function(){\r",
							"pm.expect(jsonData.additionalneeds).to.eql(\"Breakfast\")\r",
							"}) \r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}